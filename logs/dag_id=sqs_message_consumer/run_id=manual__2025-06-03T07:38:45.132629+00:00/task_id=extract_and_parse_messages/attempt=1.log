{"timestamp":"2025-06-03T07:39:54.883934","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-03T07:39:54.884431","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/consumer_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-03T07:39:55.009017","level":"info","event":"No messages retrieved from queue","logger":"root"}
{"timestamp":"2025-06-03T07:39:55.009184","level":"info","event":"Done. Returned value was: []","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-06-03T07:39:55.009481","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019734ba-781b-797d-b2ca-0115a63efb1c'), task_id='extract_and_parse_messages', dag_id='sqs_message_consumer', run_id='manual__2025-06-03T07:38:45.132629+00:00', try_number=1, map_index=-1, hostname='b09ab19b78a6', context_carrier={}, task=<Task(_PythonDecoratedOperator): extract_and_parse_messages>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 3, 7, 39, 54, 691260, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
